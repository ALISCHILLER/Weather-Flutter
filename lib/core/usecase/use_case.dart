


// تعریف یک کلاس انتزاعی برای UseCase
// این کلاس برای پیاده‌سازی عملیات‌های تجاری یا لایه‌های کاری که نیاز به پارامتر ورودی دارند و نتیجه‌ای برمی‌گردانند، استفاده می‌شود.
// این کلاس به عنوان یک الگو (abstract class) عمل می‌کند که می‌تواند در هر عملیات خاص پیاده‌سازی شود.
abstract class UseCase<T, P> {
  // متد call که به صورت آسنکرون یک عملیات را انجام می‌دهد
  // P پارامتر ورودی است که از بیرون به متد ارسال می‌شود (مانند داده‌هایی که عملیات روی آن‌ها صورت می‌گیرد)
  // T نتیجه‌ای است که پس از انجام عملیات برگشت داده می‌شود. معمولاً این نتیجه یک شی یا داده‌ای است که در برنامه استفاده می‌شود.

  Future<T> call(P params);

  // متد onError برای مدیریت خطاها (اختیاری)
  // این متد زمانی استفاده می‌شود که در حین اجرای عملیات خطایی رخ دهد
  // می‌تواند برای گزارش یا مدیریت خطاهای اختصاصی به کار برود. این متد می‌تواند به پیاده‌سازی‌های خاص اجازه دهد که خطاها را به طور مناسبی مدیریت کنند.
  Future<void> onError(Exception e);
}

class NoParams {}
